[package]
name = "self-chain-core"
version = "0.1.0"
edition = "2021"

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.36", features = ["full"] }
secp256k1 = { version = "0.31", features = [
    "rand",
] } # Updated to use correct 'rand' feature (renamed from 'rand-std')
chrono = { version = "0.4.31", features = ["serde"] }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "std"] }
sled = "0.34.7" # Updated to stable version from alpha
reqwest = { version = "0.12.4", features = ["json"] }
uuid = { version = "1.0.0", features = ["v4", "serde"] }
ipfs-api-backend-hyper = "0.6"
anyhow = { version = "1.0.73", features = ["std"] }
sha2 = "0.10.2"
tracing-error = "0.2.1" # Updated to fix security vulnerabilities
proc-macro2 = "1.0"
async-trait = "0.1.58"
maplit = "1.0.2"
clap = { version = "4.4.0", features = ["derive"] }
openllm = "0.5.2" # OpenLLM integration
async-stream = "0.3" # For async streaming responses
tokio-stream = "0.1" # For async streams
futures = "0.3" # For futures traits and utilities
serde_urlencoded = "0.7" # For URL encoding
url = "2.4" # URL parsing and manipulation
# Make sure tokio-rustls and rustls are compatible versions
tokio-rustls = "0.24.1"
rustls = { version = "0.21.6", features = ["dangerous_configuration"] }
rustls-pemfile = { version = "1.0.3" }
md5 = "0.7"
# Post-quantum cryptography libraries
pqcrypto-traits = "0.3.5" # Common traits for PQ algorithms
pqcrypto-sphincsplus = "0.7.1" # SPHINCS+ specific implementation
sha3 = "0.10.8" # For SHA3 hashing support
rand = "0.9.1" # Main rand crate for secure random number generation
rand_0_8 = { package = "rand", version = "0.8.5" } # Add separate alias for compatibility with x25519-dalek
rand_core_0_8 = { package = "rand_core", version = "0.6.4" } # Add specific rand_core version for x25519-dalek
hex = "0.4.3" # For hex encoding/decoding
base64 = "0.22" # For base64 encoding/decoding
thiserror = "2.0" # For error handling
zeroize = "1.6.0" # For secure memory wiping
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono"] } # Database
warp = "0.3" # HTTP server for testnet node
dotenv = "0.15" # Environment variables
bitcoin_hashes = "0.16.0"
x25519-dalek = { version = "2.0.0", features = [
    "reusable_secrets",
    "zeroize",
] } # For X25519 key exchange
remove_dir_all = "1.0.0" # Updated to latest version to fix vulnerabilities
tempfile = "3.8.1" # Modern replacement for deprecated tempdir
axum = { version = "0.7", features = ["multipart"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }
pqcrypto-kyber = "0.8.1" # TODO: Replace with pqcrypto-mlkem when a stable version is available
# Pin the versions of security-related dependencies with secure versions
ring = { version = "0.17.5", features = ["std"] }
webpki = { version = "0.22.0", features = ["std"] }
x509-parser = "0.15" # For X.509 certificate parsing
log = "0.4" # Logging facade for Rust
lru = "0.12" # For caching
prometheus = "0.14.0" # For metrics collection and monitoring (updated to fix protobuf vulnerability)
bincode = "1.3" # For serialization
regex = "1.10" # For pattern matching in validation
once_cell = "1.19" # For lazy static initialization
jsonwebtoken = "9.3" # For JWT authentication
bcrypt = "0.15" # For password hashing
libp2p = { version = "0.53", features = [
    "gossipsub",
    "mdns",
    "noise",
    "yamux",
    "tcp",
    "tokio",
    "request-response",
    "identify",
    "ping",
    "macros",
], default-features = false } # P2P networking stack with controlled features

[features]
default = []
security = []

[package.metadata.cargo-audit]
ignore = [
    "RUSTSEC-2024-0436", # paste is only used indirectly through netlink dependencies
    "RUSTSEC-2024-0381", # pqcrypto-kyber - will be replaced when mlkem is stable
    "RUSTSEC-2025-0010", # ring unmaintained warning - we're using a newer version directly
    "RUSTSEC-2025-0009", # ring 0.16.20 in libp2p-tls -> libp2p-quic chain. We've addressed this by adding a direct dependency on ring 0.17.5.
    "RUSTSEC-2024-0336", # rustls infinite loop vulnerability - fixed in our direct dependencies by using 0.21.6
]

# NOTE: We've addressed security concerns by directly including secure versions
# of ring, rustls, and webpki as direct dependencies, which Cargo will prefer
# over vulnerable transitive dependencies where possible

[[bin]]
name = "self-chain-node"
path = "src/bin/node.rs"

[[bin]]
name = "test_node"
path = "src/bin/test_node.rs"

[[bin]]
name = "test_orbit_node"
path = "src/bin/test_orbit_node.rs"

[[bin]]
name = "self-chain-cli"
path = "src/bin/cli.rs"

[[bin]]
name = "run_resilience_tests"
path = "scripts/run_resilience_tests.rs"

[[bin]]
name = "testnet-node"
path = "src/bin/testnet_node.rs"

[[bin]]
name = "minimal-testnet"
path = "src/bin/minimal_testnet.rs"

[lib]
name = "self_chain_core"

[[test]]
name = "node_tests"
path = "src/core/tests/node_tests.rs"

[[test]]
name = "openllm_tests"
path = "src/ai/tests/openllm_tests.rs"

[[test]]
name = "pattern_analysis_tests"
path = "src/ai/tests/pattern_analysis_tests.rs"

[[test]]
name = "communication_tests"
path = "src/network/tests/communication_tests.rs"

[[test]]
name = "testnet_integration"
path = "tests/testnet_integration.rs"

[[test]]
name = "testnet_basic"
path = "tests/testnet_basic.rs"
