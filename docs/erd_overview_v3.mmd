```mermaid
graph TD
    subgraph "User Layer"
        user_node[User Node]
        cloud_node[Cloud Node]
        SELF_assistant[SELF Assistant]
        PoAI_validator[PoAI Validator]
        SDK[SDK]
    end

    subgraph "SELF Assistant Layer"
        SA_user_interface[User Interface]
        SA_AI_context[AI Context]
        SA_PoAI[PoAI]
        SA_SDK_integration[SDK Integration]
    end

    subgraph "SDK Layer"
        SDK_multi_language[Multi-language]
        SDK_token_operations[Token Operations]
        SDK_storage[Storage]
        SDK_SELF_assistant[SELF Assistant]
    end

    subgraph "dApp Layer"
        dApp_SDK[SDK]
        dApp_SELF_assistant[SELF Assistant]
        dApp_token[Token]
        dApp_storage[Storage]
    end

    subgraph "Block Building Layer"
        block_builder[Block Builder]
        ML_model[ML Model]
        transaction_sorter[Transaction Sorter]
        efficiency_calculator[Efficiency Calculator]
        point_price[Point Price]
    end

    subgraph "AI Validator Layer"
        AI_validator[AI Validator]
        wallet_color[Wallet Color]
        hex_validator[Hex Validator]
        voting_power[Voting Power]
    end

    subgraph "Smart Contract Layer"
        smart_contract[Smart Contract]
        solidity[Solidity]
        token_creation[Token Creation]
        token_operations[Token Operations]
        storage_operations[Storage Operations]
    end

    subgraph "SELFSwap Layer"
        SELFSwap[SELFSwap]
        DEX[DEX]
        liquidity[Liquidity]
        trading[Trading]
        cross_chain[Cross-chain]
    end

    subgraph "Grid Compute Layer"
        grid_compute[Grid Compute]
        node_network[Node Network]
        distributed_compute[Distributed Compute]
        TPS_optimization[TPS Optimization]
        resource_pooling[Resource Pooling]
    end

    %% Relationships
    user_node --> cloud_node
    user_node --> SELF_assistant
    user_node --> PoAI_validator
    user_node --> SDK

    SDK --> SDK_multi_language
    SDK --> SDK_token_operations
    SDK --> SDK_storage
    SDK --> SDK_SELF_assistant

    dApp_SDK --> SDK
    SELF_assistant --> SA_user_interface
    SELF_assistant --> SA_AI_context
    SELF_assistant --> SA_PoAI
    SELF_assistant --> SA_SDK_integration

    block_builder --> ML_model
    block_builder --> transaction_sorter
    block_builder --> efficiency_calculator
    block_builder --> point_price

    AI_validator --> wallet_color
    AI_validator --> hex_validator
    AI_validator --> voting_power

    smart_contract --> solidity
    smart_contract --> token_creation
    smart_contract --> token_operations
    smart_contract --> storage_operations

    SELFSwap --> DEX
    SELFSwap --> liquidity
    SELFSwap --> trading
    SELFSwap --> cross_chain

    grid_compute --> node_network
    grid_compute --> distributed_compute
    grid_compute --> TPS_optimization
    grid_compute --> resource_pooling

    %% Styles
    classDef blue fill:#3498db,stroke:#333,stroke-width:2px
    classDef purple fill:#9b59b6,stroke:#333,stroke-width:2px
    classDef orange fill:#e67e22,stroke:#333,stroke-width:2px
    classDef green fill:#2ecc71,stroke:#333,stroke-width:2px
    classDef dark_blue fill:#3498db,stroke:#333,stroke-width:2px
    classDef gray fill:#95a5a6,stroke:#333,stroke-width:2px
    classDef yellow fill:#f1c40f,stroke:#333,stroke-width:2px
    classDef dark_green fill:#27ae60,stroke:#333,stroke-width:2px

    class user_node,cloud_node,SELF_assistant,PoAI_validator,SDK blue
    class SDK_multi_language,SDK_token_operations,SDK_storage,SDK_SELF_assistant purple
    class dApp_SDK,dApp_SELF_assistant,dApp_token,dApp_storage orange
    class block_builder,ML_model,transaction_sorter,efficiency_calculator,point_price green
    class AI_validator,wallet_color,hex_validator,voting_power dark_blue
    class smart_contract,solidity,token_creation,token_operations,storage_operations gray
    class SELFSwap,DEX,liquidity,trading,cross_chain yellow
    class grid_compute,node_network,distributed_compute,TPS_optimization,resource_pooling dark_green
```

%% Legend
<style>
    .mermaid .label {
        font-family: 'Arial', sans-serif;
        font-size: 12px;
    }
</style>

%% Color Legend
<style>
    .color-legend {
        display: flex;
        gap: 10px;
        margin: 10px 0;
    }
    .color-legend-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    .color-legend-item span {
        width: 20px;
        height: 20px;
        display: inline-block;
    }
</style>

<div class="color-legend">
    <div class="color-legend-item">
        <span style="background-color: #3498db;"></span>
        <span>User Layer / SELF Assistant</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #9b59b6;"></span>
        <span>SDK Layer</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #e67e22;"></span>
        <span>dApp Layer</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #2ecc71;"></span>
        <span>Block Building</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #3498db;"></span>
        <span>AI Validator</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #95a5a6;"></span>
        <span>Smart Contract</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #f1c40f;"></span>
        <span>SELFSwap</span>
    </div>
    <div class="color-legend-item">
        <span style="background-color: #27ae60;"></span>
        <span>Grid Compute</span>
    </div>
</div>
