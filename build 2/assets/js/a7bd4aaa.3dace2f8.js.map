{"version":3,"file":"assets/js/a7bd4aaa.3dace2f8.js","mappings":"gJASO,SAASA,EAAwBC,EAAUC,GAC9C,MAAO,QAAQD,KAAYC,GAC/B,C,4CCGA,SAASC,EAAuBC,GAC9B,MAAM,QAACC,GAAWD,EAClB,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CACbL,QAASA,EAAQA,QACjBM,IAAKX,EAAwBK,EAAQJ,SAAUI,EAAQA,YAEzDI,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAJ,SACVH,EAAQQ,UAAWJ,EAAAA,EAAAA,KAAA,QAAMK,KAAK,SAASC,QAAQ,0BAIxD,CACA,SAASC,EAAsBZ,GAC7B,MAAM,QAACC,EAAO,MAAEY,GAASb,EACzB,OACEK,EAAAA,EAAAA,KAACS,EAAAA,GAAqB,CAACC,UAAWd,EAAQc,UAAUX,UAClDC,EAAAA,EAAAA,KAACW,EAAAA,EAAmB,CAACf,QAASA,EAAQG,UACnCa,EAAAA,EAAAA,GAAaJ,EAAMK,WAI5B,CACe,SAASC,EAAenB,GACrC,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACN,EAAsB,IAAKC,KAC5BK,EAAAA,EAAAA,KAACO,EAAqB,IAAKZ,MAGjC,C","sources":["webpack://docs/./node_modules/@docusaurus/plugin-content-docs/lib/client/docsSearch.js","webpack://docs/./node_modules/@docusaurus/theme-classic/lib/theme/DocVersionRoot/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { useAllDocsData, useActivePluginAndVersion, } from '@docusaurus/plugin-content-docs/client';\nimport { useDocsPreferredVersionByPluginId } from './docsPreferredVersion';\n/** The search tag to append as each doc's metadata. */\nexport function getDocsVersionSearchTag(pluginId, versionName) {\n    return `docs-${pluginId}-${versionName}`;\n}\n/**\n * Gets the relevant docs tags to search.\n * This is the logic that powers the contextual search feature.\n *\n * If user is browsing Android 1.4 docs, he'll get presented with:\n * - Android '1.4' docs\n * - iOS 'preferred | latest' docs\n *\n * The result is generic and not coupled to Algolia/DocSearch on purpose.\n */\nexport function useDocsContextualSearchTags() {\n    const allDocsData = useAllDocsData();\n    const activePluginAndVersion = useActivePluginAndVersion();\n    const docsPreferredVersionByPluginId = useDocsPreferredVersionByPluginId();\n    // This can't use more specialized hooks because we are mapping over all\n    // plugin instances.\n    function getDocPluginTags(pluginId) {\n        const activeVersion = activePluginAndVersion?.activePlugin.pluginId === pluginId\n            ? activePluginAndVersion.activeVersion\n            : undefined;\n        const preferredVersion = docsPreferredVersionByPluginId[pluginId];\n        const latestVersion = allDocsData[pluginId].versions.find((v) => v.isLast);\n        const version = activeVersion ?? preferredVersion ?? latestVersion;\n        return getDocsVersionSearchTag(pluginId, version.name);\n    }\n    return [...Object.keys(allDocsData).map(getDocPluginTags)];\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {HtmlClassNameProvider, PageMetadata} from '@docusaurus/theme-common';\nimport {\n  getDocsVersionSearchTag,\n  DocsVersionProvider,\n} from '@docusaurus/plugin-content-docs/client';\nimport renderRoutes from '@docusaurus/renderRoutes';\nimport SearchMetadata from '@theme/SearchMetadata';\nfunction DocVersionRootMetadata(props) {\n  const {version} = props;\n  return (\n    <>\n      <SearchMetadata\n        version={version.version}\n        tag={getDocsVersionSearchTag(version.pluginId, version.version)}\n      />\n      <PageMetadata>\n        {version.noIndex && <meta name=\"robots\" content=\"noindex, nofollow\" />}\n      </PageMetadata>\n    </>\n  );\n}\nfunction DocVersionRootContent(props) {\n  const {version, route} = props;\n  return (\n    <HtmlClassNameProvider className={version.className}>\n      <DocsVersionProvider version={version}>\n        {renderRoutes(route.routes)}\n      </DocsVersionProvider>\n    </HtmlClassNameProvider>\n  );\n}\nexport default function DocVersionRoot(props) {\n  return (\n    <>\n      <DocVersionRootMetadata {...props} />\n      <DocVersionRootContent {...props} />\n    </>\n  );\n}\n"],"names":["getDocsVersionSearchTag","pluginId","versionName","DocVersionRootMetadata","props","version","_jsxs","_Fragment","children","_jsx","SearchMetadata","tag","PageMetadata","noIndex","name","content","DocVersionRootContent","route","HtmlClassNameProvider","className","DocsVersionProvider","renderRoutes","routes","DocVersionRoot"],"sourceRoot":""}