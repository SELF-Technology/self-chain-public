{"version":3,"file":"assets/js/3af0cfc6.52c93592.js","mappings":"ihCAEO,MAAMA,EAAc,CAC1BC,cAAe,2CACfC,iBAAkB,GAENC,EAAe,8BAEfC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,GAAI,SACD,YACAN,EAAMO,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKP,EAAYE,OAAQ,CAClCK,UAAU,SAAKP,EAAYC,GAAI,CAC7BO,GAAI,8BACJD,SAAU,kCAEV,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,gMACR,MAAM,UAAMP,EAAYK,GAAI,CAC9BE,SAAU,CAAC,MAAM,UAAMP,EAAYG,GAAI,CACrCI,SAAU,CAAC,MAAM,SAAKP,EAAYI,EAAG,CACnCG,SAAU,kNACR,QACF,MAAM,UAAMP,EAAYG,GAAI,CAC9BI,SAAU,CAAC,MAAM,SAAKP,EAAYI,EAAG,CACnCG,SAAU,wIACR,QACF,QACF,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,2OACR,MAAM,SAAK,MAAO,CACpBE,MAAO,kBACPF,UAAU,SAAK,SAAU,CACvBG,IAAK,gEACLC,MAAO,6EACPC,iBAAiB,MAEjB,MAAM,SAAK,KAAM,CAAC,GAAI,MAAM,SAAKZ,EAAYC,GAAI,CACnDO,GAAI,iCACJD,SAAU,mCACR,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,yiBACR,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,gsBACR,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,8SACR,MAAM,SAAKP,EAAYI,EAAG,CAC5BG,SAAU,idACR,MAAM,SAAK,MAAO,CACpBE,MAAO,kBACPF,UAAU,SAAK,SAAU,CACvBG,IAAK,gEACLC,MAAO,6EACPC,iBAAiB,QAIzB,CACe,SAASC,EAAWd,EAAQ,CAAC,GAC1C,MAAOe,QAASC,GAAa,KACxB,YACAhB,EAAMO,YAEX,OAAOS,GAAY,SAAKA,EAAW,IAC9BhB,EACHQ,UAAU,SAAKT,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,wDC1DA,MAAMiB,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBZ,GAC/B,MAAMa,EAAoB,aAAiBF,GAG3C,OAAO,UACL,WAEE,MAA0B,mBAAfX,EACFA,EAAWa,GAGb,IAAIA,KAAsBb,EACnC,EACA,CAACa,EAAmBb,GAExB,CAWO,SAASc,EAAYC,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAWf,WACde,EAAWf,WAAWU,GACtBK,EAAWf,YAAcU,EAEfE,EAAiBG,EAAWf,YAGvC,gBACLW,EAAWO,SACX,CAACC,MAAOH,GACRD,EAAWd,SAEf,C","sources":["webpack://docs/./docs/About SELF/evolution.md","webpack://docs/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_label: 'ðŸ”„ The Evolution Of Technology',\n\tsidebar_position: 2\n};\nexport const contentTitle = 'The Evolution Of Technology';\nexport {default as metadata} from '@site/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-about-self-evolution-md-3af.json'\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    header: \"header\",\n    li: \"li\",\n    p: \"p\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.header, {\n      children: _jsx(_components.h1, {\n        id: \"the-evolution-of-technology\",\n        children: \"The Evolution Of Technology\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Technology is evolving in two main directions; towards more centralised control, or towards decentralised, democratic, user-control. Humanity is at a crossroads and everyone has a choice:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Should we continue to use solutions that contribute to manifesting a future in which centralised forces dominate through power and influence,  where humans are data batteries and our rights are subjective?\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Or should we choose solutions that empower individuals to have ownership and control over their digital experiences and their data?\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This will increasingly become a consequential choice as the capabilities of AI evolve and the data that platforms and their partners collect on us increases exponentially. Here's a short video explaining this point in more detail:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"video-container\",\n      children: _jsx(\"iframe\", {\n        src: \"https://www.youtube.com/embed/WVMt6vouyVU?si=MUJYXZExtNB0X1FY\",\n        allow: \"autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media\",\n        allowfullscreen: true\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h1, {\n      id: \"shifting-of-the-overton-window\",\n      children: \"Shifting of the Overton Window\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The operating systems of the world we live in today provide access to a technological environment where the user receives something valuable - the ability to utilise a vast selection of free and paid applications. In return for this ability, people pay for a license and sacrifice a significant portion of their personal data to technology companies. Anyone using these systems and their applications are also at the mercy of social media algorithms that ultimately set the parameters for creating the filter bubbles the user inevitably ends up in.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Many accept this without much thought, perhaps due to not realising whatâ€™s really happening, sheer convenience, or because there isnâ€™t a functioning or efficient alternative. Some may be fully aware of whatâ€™s going on, but feel that surrendering personal privacy and the rights to their own data in return for a free social media app is fair. One could view this as a shifting \\\"Overton Window\\\" (a concept outlined in the video at the base of this page). When something starts as unthinkable and then becomes considered radical, acceptable, and sensible before it finally establishes itself as the popular norm. Anyone with a passing interest in politics may recognise this phenomenon.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Itâ€™s hard to imagine the situation will change anytime soon. Most will continue to choose the large platforms because thatâ€™s what everyone else is doing, and the perceived benefits gained from using those systems appear to outweigh the data ownership and information control handed over.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Still, we suspect that a growing number of people want something different. Just by observing the explosive growth of interest in blockchain technology, privacy tools and decentralised solutions over the past decade, itâ€™s possible to deduce that a percentage of the population would prefer to use a platform that is democratic and private, provided that it is valuable, efficient and easy to use; either as an addition to or instead of, current platforms.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"video-container\",\n      children: _jsx(\"iframe\", {\n        src: \"https://www.youtube.com/embed/XJ4xm2dA1Io?si=cLsFwADUBbt1bllY\",\n        allow: \"autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media\",\n        allowfullscreen: true\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["frontMatter","sidebar_label","sidebar_position","contentTitle","assets","toc","_createMdxContent","props","_components","h1","header","li","p","ul","components","children","id","class","src","allow","allowfullscreen","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}