"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5067],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},8653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Technical Docs/Developer Resources/PUBLIC_INTERFACES","title":"Public Interfaces","description":"\ud83d\udea7 BETA NOTICE: These public interfaces are currently in beta and under active development. The specifications described here represent our target API design, but implementation is ongoing. Check back regularly for updates!","source":"@site/docs/Technical Docs/Developer Resources/PUBLIC_INTERFACES.md","sourceDirName":"Technical Docs/Developer Resources","slug":"/Technical Docs/Developer Resources/PUBLIC_INTERFACES","permalink":"/Technical Docs/Developer Resources/PUBLIC_INTERFACES","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Public Interfaces","sidebar_position":2},"sidebar":"docs","previous":{"title":"Getting Started (Testnet)","permalink":"/Technical Docs/Developer Resources/Getting_Started_Testnet"},"next":{"title":"Proof-of-AI","permalink":"/Technical Docs/PoAI/Proof-of-AI"}}');var r=i(4848),t=i(8453);const a={title:"Public Interfaces",sidebar_position:2},c="SELF Chain Public Interfaces Specification",l={},o=[{value:"Overview",id:"overview",level:2},{value:"Core Principles",id:"core-principles",level:2},{value:"Public Interfaces",id:"public-interfaces",level:2},{value:"1. Blockchain Query Interface",id:"1-blockchain-query-interface",level:3},{value:"2. Transaction Builder Interface",id:"2-transaction-builder-interface",level:3},{value:"3. Event Subscription Interface",id:"3-event-subscription-interface",level:3},{value:"4. Cryptographic Utilities Interface",id:"4-cryptographic-utilities-interface",level:3},{value:"5. Smart Contract Interface (Future)",id:"5-smart-contract-interface-future",level:3},{value:"Restricted Interfaces (NOT Public)",id:"restricted-interfaces-not-public",level:2},{value:"\u274c AI Validation Interface",id:"-ai-validation-interface",level:3},{value:"\u274c Consensus Internal Interface",id:"-consensus-internal-interface",level:3},{value:"\u274c Security Critical Interface",id:"-security-critical-interface",level:3},{value:"Data Types (Public Safe)",id:"data-types-public-safe",level:2},{value:"Block Structure",id:"block-structure",level:3},{value:"Transaction Structure",id:"transaction-structure",level:3},{value:"Network Information",id:"network-information",level:3},{value:"Implementation Guidelines",id:"implementation-guidelines",level:2},{value:"For SDK Developers",id:"for-sdk-developers",level:3},{value:"For Core Developers",id:"for-core-developers",level:3},{value:"Version Management",id:"version-management",level:2},{value:"Interface Versioning",id:"interface-versioning",level:3},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"Security Checklist",id:"security-checklist",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"self-chain-public-interfaces-specification",children:"SELF Chain Public Interfaces Specification"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udea7 ",(0,r.jsx)(n.strong,{children:"BETA NOTICE"}),": These public interfaces are currently in beta and under active development. The specifications described here represent our target API design, but implementation is ongoing. Check back regularly for updates!"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"This document defines the security-safe public interfaces that can be exposed in SDKs and public repositories without compromising SELF Chain's security."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"SELF Chain maintains strict security boundaries between public and private code. This specification defines what interfaces can be safely made public while protecting our core security mechanisms."}),"\n",(0,r.jsx)(n.h2,{id:"core-principles",children:"Core Principles"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-Only First"}),": Public interfaces should primarily be read-only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Validation Logic"}),": Never expose AI validation algorithms or thresholds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Abstract Consensus"}),": Hide internal consensus mechanisms behind abstractions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testnet Safe"}),": All interfaces must be safe for public testnet use"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security by Design"}),": Default to restrictive, open carefully"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"public-interfaces",children:"Public Interfaces"}),"\n",(0,r.jsx)(n.h3,{id:"1-blockchain-query-interface",children:"1. Blockchain Query Interface"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Allow reading blockchain state without exposing internals"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface IBlockchainQuery {\n  // Block queries\n  getBlock(height: number): Promise<Block>;\n  getBlockByHash(hash: string): Promise<Block>;\n  getLatestBlock(): Promise<Block>;\n  getBlockRange(start: number, end: number): Promise<Block[]>;\n  \n  // Transaction queries\n  getTransaction(hash: string): Promise<Transaction>;\n  getTransactionsByBlock(blockHeight: number): Promise<Transaction[]>;\n  getTransactionsByAddress(address: string, limit?: number): Promise<Transaction[]>;\n  \n  // Account queries\n  getAccount(address: string): Promise<Account>;\n  getBalance(address: string): Promise<Balance>;\n  getNonce(address: string): Promise<number>;\n  \n  // Network queries\n  getNetworkInfo(): Promise<NetworkInfo>;\n  getValidators(): Promise<ValidatorInfo[]>;\n  getPeers(): Promise<PeerInfo[]>;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Read-only operations"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 No exposure of validation logic"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Public blockchain data only"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-transaction-builder-interface",children:"2. Transaction Builder Interface"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Construct transactions without exposing validation rules"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ITransactionBuilder {\n  // Basic transactions\n  transfer(params: TransferParams): UnsignedTransaction;\n  delegate(params: DelegateParams): UnsignedTransaction;\n  undelegate(params: UndelegateParams): UnsignedTransaction;\n  \n  // Transaction helpers\n  estimateFee(tx: UnsignedTransaction): Promise<Fee>;\n  validateAddress(address: string): boolean;\n  generateAddress(): Address;\n}\n\ninterface TransferParams {\n  from: string;\n  to: string;\n  amount: string;\n  memo?: string;\n  // Note: No validation thresholds exposed\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Transaction construction only"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Validation happens on-chain"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 No consensus parameters exposed"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-event-subscription-interface",children:"3. Event Subscription Interface"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Subscribe to blockchain events in real-time"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface IEventSubscription {\n  // Block events\n  onNewBlock(callback: (block: Block) => void): Subscription;\n  onBlockFinalized(callback: (block: Block) => void): Subscription;\n  \n  // Transaction events\n  onTransaction(filter: TxFilter, callback: (tx: Transaction) => void): Subscription;\n  onTransactionConfirmed(txHash: string, callback: (tx: Transaction) => void): Subscription;\n  \n  // Network events\n  onValidatorChange(callback: (validators: ValidatorInfo[]) => void): Subscription;\n  onNetworkStatus(callback: (status: NetworkStatus) => void): Subscription;\n}\n\ninterface Subscription {\n  unsubscribe(): void;\n  id: string;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Public event data only"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 No internal consensus events"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Rate-limited subscriptions"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-cryptographic-utilities-interface",children:"4. Cryptographic Utilities Interface"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Provide crypto utilities without exposing secure operations"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ICryptoUtils {\n  // Key generation (testnet safe)\n  generateKeyPair(): KeyPair;\n  generateMnemonic(): string;\n  keyPairFromMnemonic(mnemonic: string): KeyPair;\n  \n  // Public key operations only\n  publicKeyToAddress(publicKey: string): string;\n  isValidPublicKey(publicKey: string): boolean;\n  \n  // Hashing (public algorithms only)\n  sha256(data: Uint8Array): Uint8Array;\n  keccak256(data: Uint8Array): Uint8Array;\n  \n  // Signature verification (not creation)\n  verifySignature(message: Uint8Array, signature: Uint8Array, publicKey: string): boolean;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Public crypto operations only"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 No private key operations in SDK"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Standard algorithms only"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"5-smart-contract-interface-future",children:"5. Smart Contract Interface (Future)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Interact with smart contracts when available"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ISmartContract {\n  // Deployment (testnet)\n  deploy(bytecode: Uint8Array, params?: any[]): Promise<ContractAddress>;\n  \n  // Interaction\n  call(address: string, method: string, params: any[]): Promise<any>;\n  query(address: string, method: string, params: any[]): Promise<any>;\n  \n  // Events\n  getContractEvents(address: string, filter?: EventFilter): Promise<Event[]>;\n  subscribeToContract(address: string, callback: (event: Event) => void): Subscription;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Standard contract ABI only"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 No privileged operations"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Testnet deployment only initially"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"restricted-interfaces-not-public",children:"Restricted Interfaces (NOT Public)"}),"\n",(0,r.jsx)(n.p,{children:"These interfaces must NEVER be exposed in public code:"}),"\n",(0,r.jsx)(n.h3,{id:"-ai-validation-interface",children:"\u274c AI Validation Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// NEVER EXPOSE THIS\ninterface IAIValidation {\n  validateTransaction(tx: Transaction): AIValidationResult;\n  getValidationThreshold(): number;\n  getPatternRules(): PatternRule[];\n  trainModel(data: TrainingData): void;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-consensus-internal-interface",children:"\u274c Consensus Internal Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// NEVER EXPOSE THIS\ninterface IConsensusInternal {\n  proposeBlock(transactions: Transaction[]): Block;\n  voteOnBlock(block: Block): Vote;\n  getConsensusParams(): ConsensusParameters;\n  adjustDifficulty(): void;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-security-critical-interface",children:"\u274c Security Critical Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// NEVER EXPOSE THIS\ninterface ISecurityCritical {\n  getSecurityThresholds(): SecurityThresholds;\n  detectAnomalies(data: any): AnomalyReport;\n  getPrivateKeys(): PrivateKey[];\n  accessSecureStorage(): SecureStorage;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"data-types-public-safe",children:"Data Types (Public Safe)"}),"\n",(0,r.jsx)(n.h3,{id:"block-structure",children:"Block Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Block {\n  height: number;\n  hash: string;\n  previousHash: string;\n  timestamp: number;\n  transactions: string[]; // Transaction hashes only\n  validator: string;\n  // Note: No AI scores or validation details\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"transaction-structure",children:"Transaction Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Transaction {\n  hash: string;\n  from: string;\n  to: string;\n  amount: string;\n  fee: string;\n  nonce: number;\n  timestamp: number;\n  status: 'pending' | 'confirmed' | 'failed';\n  // Note: No validation scores or AI details\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-information",children:"Network Information"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface NetworkInfo {\n  chainId: string;\n  networkType: 'testnet' | 'mainnet';\n  blockHeight: number;\n  blockTime: number;\n  activeValidators: number;\n  // Note: No consensus parameters\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-guidelines",children:"Implementation Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"for-sdk-developers",children:"For SDK Developers"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Always Check Network Type"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (network === 'mainnet' && !MAINNET_ENABLED) {\n  throw new Error('Mainnet not yet available');\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Include Testnet Warnings"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"console.warn('\u26a0\ufe0f Connected to SELF Chain TESTNET - tokens have no value');\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Rate Limit Everything"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const rateLimiter = new RateLimiter({\n  maxRequests: 100,\n  windowMs: 60000 // 1 minute\n});\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Validate But Don't Expose"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Good: Validate on client side for UX\nif (!isValidAddress(address)) {\n  throw new Error('Invalid address format');\n}\n\n// Bad: Don't expose how validation works internally\n// if (address.colorMarker !== calculateColorMarker(address)) { ... }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"for-core-developers",children:"For Core Developers"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Review All Public Interfaces"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Security review required for new interfaces"}),"\n",(0,r.jsx)(n.li,{children:"Document security implications"}),"\n",(0,r.jsx)(n.li,{children:"Test with adversarial mindset"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Maintain Abstraction Layers"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Public interfaces call private implementations"}),"\n",(0,r.jsx)(n.li,{children:"Never expose internal state"}),"\n",(0,r.jsx)(n.li,{children:"Use dependency injection"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Monitor Usage"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Log public API usage"}),"\n",(0,r.jsx)(n.li,{children:"Detect abnormal patterns"}),"\n",(0,r.jsx)(n.li,{children:"Have kill switches ready"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-management",children:"Version Management"}),"\n",(0,r.jsx)(n.h3,{id:"interface-versioning",children:"Interface Versioning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface VersionedAPI {\n  version: '1.0.0';\n  deprecated?: string[];\n  experimental?: string[];\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Announce 3 months in advance"}),"\n",(0,r.jsx)(n.li,{children:"Provide migration guides"}),"\n",(0,r.jsx)(n.li,{children:"Support old version for 6 months"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-checklist",children:"Security Checklist"}),"\n",(0,r.jsx)(n.p,{children:"Before making any interface public:"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No validation logic exposed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No consensus parameters visible"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No security thresholds included"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Rate limiting implemented"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Testnet safety checks added"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Security review completed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Examples provided"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"These public interfaces provide a safe, useful API surface for developers while protecting SELF Chain's security-critical components. When in doubt, keep it private and consult the security team."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:'"Security is not a feature, it\'s a design principle."'})," - SELF Chain Security Team"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
//# sourceMappingURL=770c6e11.cf690e93.js.map